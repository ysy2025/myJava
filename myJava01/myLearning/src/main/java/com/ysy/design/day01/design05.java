package com.ysy.design.day01;

/*
* 里氏替换原则
* 继承性的思考和说明
*   1,父类中,凡是实现好的方法,实际上设定了规范和契约,虽然不强制要求所有子类必须遵循这些契约,
*       但是如果子类对这些已经实现的方法,任意修改,就会导致整个继承体系造成破坏
*   2,继承在给程序设计带来便利的同时,也带来的弊端
*       比如使用继承会给程序带来侵入性
*       程序的可移植性降低
*       增加对象之间的耦合性
*       如果一个类被其他类继承,那么这个类需要修改时,需要考虑所有子类
*
* 里氏替换:
*   所有引用基类的地方必须能透明使用其子类的对象
*   使用继承时,子类中,尽量不要重写父类方法
*   里氏替代告诉我们,继承实际上,让两个类,耦合性增强了,在适当的情况下,可以通过聚合,组合,依赖,来解决问题
 */
public class design05 {
    public static class design06 {
    }
}

