需求:
    1,盖房子,分为打桩,砌墙,封顶等过程
    2,房子有各种需求,比如普通房,别墅等;过程一样,但是需求不同

    !产品和产品建造过程解耦合->建造者模式

    又叫生成器模式
    将复杂对象的建造过程抽象出来(抽象类),是这个抽象过程的不同实现方法可以构造出不同表现的对象
    建造者是一步一步创建一个复杂对象,允许游湖只通过复杂对象的类型和内容就可以构建他们,用户不需要知道内部的构建细节

    建造者四个角色
        product,产品,一个具体的产品对象
        builder,抽象的建造者,创建一个product对象的各个部件指定的接口/抽象类
        concretebuilder,具体的建造者,实现接口,构建和装配各个部件
        director,构建一个使用builder接口的对象,主要用于创建一个复杂的对象
            两个作用,1,隔离客户与对象的生产过程
            2,控制产品对象的生产过程

建造者模式的注意事项和细节
    建造者模式创建的产品一般具有较多的共同点,其组成部分相似;如果产品之间差异性很大,则不适合使用建造者模式;因此其使用范围受到限制
    如果产品内部变化复杂,可能会导致需要定义很多具体建造者来实现变化,导致系统庞大

抽象工厂 vs 建造者
抽象工厂实现了对产品家族的创建,一个产品家族是这样一系列的产品:具有不同分类维度的产品组合,采用抽象工厂模式,不需要关心构建过程,只关心什么产品由什么工厂生产即可
建造者模式,要求按照指定的蓝图建造产品,主要目的是,通过组装零配件而产生一个新产品