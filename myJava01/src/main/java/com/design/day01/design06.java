package com.design.day01;

/*
* 依赖关系:
*   只要在类中用到了对方,那么之间就存在依赖关系.如果没有对方,连编译都过不去.
*       类中用到了对方
*       类的成员属性
*       类的返回类型
*       方法的参数类型
*       方法中使用的
*
* 泛化关系
*   泛化关系实际上就是集成关系,是依赖关系的特例
*   如果有继承,就是泛化关系
*
* 实现关系
*   A类实现了B接口,就是实现;也是依赖关系的特例
*
* 关联关系
*   依赖关系的特例
*   类与类的联系,具有导航性质,即双向关系或者单向关系
*
* 聚合关系
*   关联关系的特例,是整体和部分的关系,可以分开
*   导航性和和多重性
*
* 组合关系
*   关联关系的特例,是整体和部分的关系,不可分开
*   导航性和和多重性
 */
public class design06 {
}
