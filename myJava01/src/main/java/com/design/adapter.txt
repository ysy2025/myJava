出国的充电器需要转接口->adaptor

适配器模式,将某个类的接口转换成客户端期望的另一个接口表示,主要目的是兼容性,让原本不能匹配不能一起工作的两个类可以协同工作,又叫包装器

适配器,属于结构型模式
    主要分为三类:类,对象,接口 适配器模式

工作原理:
    适配器模式:一个类接口转换为另一种接口,让不兼容->兼容
    从用户角度,看不到被适配者,是解耦合的
    用户调用适配器转化出来的目标接口方法,适配器再调用被适配者相关接口
    用户收到反馈结果,感觉只是和目标接口交互

    类适配器的优缺点
        java是单继承机制,所以类适配器需要继承src类,这是一个缺点,因为dest必须是接口,有一定局限性
        src的类方法,会在adapter中使用,可能产生问题
        src被继承了,所以可以根据需要重写src方法,使得adapter灵活性增强了.

    对象适配器:
        基本思路和类适配器相同
        将adapter做了调整,不再继承src类,而是持有src类的实例,解决兼容性问题;
        根据合成复用原则,在系统中尽量使用关联关系替代继承关系
        是适配器模式的一种

    接口适配器模式:缺省适配器模式
        当不需要全部实现接口提供的方法时,可以事先设计一个抽象类实现接口,并为该接口的每个方法提供一个默认方法
        接着,该抽象类的子类可以有选择覆盖父类的某些方法来实现需求

        适合于,一个接口不想使用其所有方法的情况.

    注意事项
        三种命名方式:根据src以怎样的方式给到adapter
            类继承,类适配器
            对象,通过构造器引入
            接口,以接口给到

        最大的作用是将原来不兼容的接口融合起来了
        实际开发中,不拘泥于上述形式