基本概念
    程序,进程,线程
        指令的集合->程序,是静态的对象
        程序的执行,运行的一个程序,产生,存在,消亡的过程进程是资源分配的单位,系统运行的时候会为每一个进程分配不同的内存区域
        进程可以进一步细化为线程,线程是一个程序内部的一条执行路径
            一个进程同事并行执行多个线程->支持多线程
            线程是调度和执行的最小单位,每个线程有独立的运行栈和程序计数器,线程切换的开销小
            一个进程中的多个线程共享相同的内存单元/内存地址空间,从同一堆中分配对象,可以访问相同变量和对象.
            线程之间通信简便高效.
            多个线程共享操作系统资源可能带来隐患.

    单核,多核cpu
        单核cpu->假的多线程
        多核cpu->最大化多线程效率

    一个java程序,最少有3个线程:
        main
        gc
        异常处理
        异常处理的时候,会影响主线程

    并行和并发
        并行:多个cpu同时执行多个任务,多个人做同多件事情
        并发:一个cpu同时(时间片)执行多个任务,多个人做同一件事情

    多线程优点:
        提高响应
        提高cpu利用率
        改善程序结构

    何时需要多线程:
        需要同时执行多任务
        需要实现一些等待的任务,比如用户输入,文件读写,网络多谢,搜索等
        需要后台运行

    线程创建和使用
        调度策略:时间片
            抢占式:高优先级的线程抢占CPU
        Java 调度方法
            同优先级的,先进先出队列,先到先服务,使用时间片策略
            对于高优先级,使用优先调度的抢占式策略
        优先级等级:1-10, max, min, nor
            getPriority
            setPriority

    线程的生命周期
    线程同步
    线程通信
